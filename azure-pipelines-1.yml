# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
- script: dotnet build ./src/SoftwareTesting.sln --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

# - script: |
#    cd src/PlaywrightTests
#    npm install
#    npx playwright install
#    npx playwright test --project=chromium
#   displayName: "Executing PlayWrightTest"
- task: UseDotNet@2
  displayName: 'Install .NET'
  inputs:
    packageType: 'sdk'
    version: '6.0.x'

- task: DotNetCoreCLI@2
  displayName: New Manifest for tool
  inputs:
    command: custom
    custom: 'new '
    arguments: tool-manifest 
- task: DotNetCoreCLI@2
  displayName: Install Playwright CLI
  inputs:
    command: custom
    custom: 'tool '
    arguments: install Microsoft.Playwright.CLI
- task: DotNetCoreCLI@2
  displayName: 'Build test project'
  inputs:
    command: 'build'
    projects: 'src/PlaywrightTests/PlaywrightTests.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: './src/XUnitExamples/XUnitExamples.csproj'
    arguments: ''

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
    
    
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
  


